#ifndef __MI_STC_IMP_HW_MODULATE_H__
#define __MI_STC_IMP_HW_MODULATE_H__

#include <map>
#include <mutex>
#include <utils/sys.h>
#include <snapdragon_color_intf.h>
#include <snapdragon_color_intf_priv.h>
#include <IQClient.h>
#include <math.h>
#include <string.h>
#include <mi_stc_service.h>
#include "display_property.h"
#include <utils/Mutex.h>
#include "display_config.h"
#include "parseXml.h"
#include "PicHDRAlgo.h"
#ifdef EYECARE_V4
#include "eyecare.h"
#endif

#define CALIB_PATH "/mnt/vendor/persist/display/"
#define LUT_MODE_NUM 9
#define SRE_LUT_NUM 29
#define SRE_LUT_LEN 256

#define Max(a, b, c) (a) > (b)? ((a) > (c)? (a) : (c)) : ((b) > (c)? (b):(c))
#define Min(a, b, c) (a) < (b)? ((a) < (c)? (a) : (c)) : ((b) < (c)? (b):(c))
static const std::string kHal_srgb = "hal_srgb";
static const std::string kHal_dcip3 = "hal_dcip3";
static const std::string kexpert_wcg_srgb = "expert_wcg_srgb";
static const std::string kexpert_wcg_dcip3 = "expert_wcg_dcip3";
static const std::string kHal_hdr = "standard_hdr";

using ::android::Mutex;
using namespace qdisplaymode;
using namespace android;
#define STC_LOGV(fmt, args...) ({\
                if(MiStcImpl::log_level <= 0)\
                    ALOGD("" fmt, ##args);\
                else\
                    do{}while(0);\
                })

#define STC_LOGD(fmt, args...) ({\
                if(MiStcImpl::log_level <= 1)\
                    ALOGD("" fmt, ##args);\
                else\
                    do{}while(0);\
                })

#define STC_LOGI(fmt, args...) ({\
                if(MiStcImpl::log_level <= 2)\
                    ALOGI("" fmt, ##args);\
                else\
                    do{}while(0);\
                })

#define STC_LOGW(fmt, args...) ({\
                if(MiStcImpl::log_level <= 3)\
                    ALOGW("" fmt, ##args);\
                else\
                    do{}while(0);\
                })

#define STC_LOGE(fmt, args...) ({\
                if(MiStcImpl::log_level <= 4)\
                    ALOGE("" fmt, ##args);\
                else\
                    do{}while(0);\
                })

#define DIMMING_MAX_THREAD_CNT 200

namespace snapdragoncolor {

class MiStcImpl;

typedef int (MiStcImpl::*SetPropFunc)(const ScPayload &);
typedef int (MiStcImpl::*GetPropFunc)(ScPayload *);
typedef int (MiStcImpl::*ProcessOpsFunc)(const ScPayload &, ScPayload *);

struct HSV_type {
    double h;
    double s;
    int v;
};

enum UPDATE_LIST {
    PCC = 0,
    PA,
    IGC,
    GC,
    LUT,
    IGC_DITHER,
    SIX_ZONE,
    UPDATE_LIST_MAX,
};

enum MiLutFile {
    D65_sRGB,
    D65_P3,
    D75_sRGB,
    D75_P3,
    vivid,
    hdr,
    retro,
    colorless,
    warm,
    cool,
    lime,
    jazz,
    fresh,
    pink,
    machine,
    nature_srgb,
    nature_P3,
    AI_disp_0,
    AI_disp_1,
    MiLutFileMax,
};

enum STC_DisplayState {
  kStateOff,        //!< Display is OFF. Contents are not rendered in this state. Client will not
                    //!< receive VSync events in this state. This is default state as well.

  kStateOn,         //!< Display is ON. Contents are rendered in this state.

  kStateDoze,       //!< Display is ON and it is configured in a low power state.

  kStateDozeSuspend,
                    //!< Display is ON in a low power state and continue showing its current
                    //!< contents indefinitely until the mode changes.

  kStateStandby,    //!< Display is OFF. Client will continue to receive VSync events in this state
                    //!< if VSync is enabled. Contents are not rendered in this state.
};

enum STC_TIMER_STATE {
    TIMER_PCC,
    TIMER_PA,
    TIMER_IGC,
    TIMER_GC,
    TIMER_LUT,
    TIMER_IGC_DITHER,
    TIMER_6ZONE,
    TIMER_REFRESH,
    TIMER_SYNC,
    TIMER_REFRESH_TIMEOUT,
    TIMER_STATE_MAX,
};

struct Gamma_type {
    std::vector<uint32_t> r;
    std::vector<uint32_t> g;
    std::vector<uint32_t> b;
};

ScPostBlendInterface* GetScPostBlendInterface(uint32_t major_version,
                                              uint32_t minor_version);

class MiStcImpl : public ScPostBlendInterface, public qClient::BnQClient {
public:
    MiStcImpl();
    int Init(const std::string &panel_name);
    int DeInit();
    int readLutData(char* path);
    int initLut(MiImplType disp_id);
    void InitGamma(MiImplType disp_id);
    int initSre(MiImplType disp_id);
    int SetProperty(const ScPayload &payload);
    int GetProperty(ScPayload *payload);
    int ProcessOps(ScOps op, const ScPayload &input, ScPayload *output);
    void SetPCC(double* coeff);
    void SetPA(disp_pa_config_data cfg, int dimming);
    void SetIGC(int gamma, int file_id, int dimming);
    void SetGC(int gamma, int file_id, int dimming);
    void SetLut(int reInit, int lutIndex, int dimming);
    void SetSRE(int level, int divisor, int dimming);
    void ApplyPCC(MiImplType disp_type, double* coeff);
    void ApplyPA(MiImplType disp_type, disp_pa_config_data cfg, int dimming);
    void ApplyIGC(MiImplType disp_type, int gamma, int file_id, int dimming);
    void ApplyGC(MiImplType disp_type, int gamma, int file_id, int dimming);
    void ApplySREIGC(MiImplType disp_type, std::vector<int32_t> tempData, int dimming);
    void SetSREIGC(std::vector<int32_t> tempData, int dimming);
    void ApplyLut(MiImplType disp_type, int reInit, int lutIndex, int dimming);
    void ApplySRE(MiImplType disp_type, int level, int divisor, int dimming);
#ifdef EYECARE_V4
    void ApplyEyeCare(MiImplType disp_type, int enable, int level, int cookie);
    void SetEyeCare(int enable, int level, int cookie);
    void ApplyEyeCarePcc(MiImplType disp_type, double* coeff);
    void SetEyeCarePcc(double* coeff);
#endif
    void ApplyPicHDR(MiImplType disp_type,  int enable, int adrc, int luxIndex);
    void SetPicHDR(int enable,int adrc, int luxIndex);
    void timerCallback(int caseId, int generation, int value);
    int transformUnsignedToSigned(int value, int max);
    int transformSignedToUnsigned(int value, int max);
    static int log_level;

private:
    int ProcessModeRenderIntent(const ScPayload &in, ScPayload *out);
    int ProcessModeSwAssets(const ScPayload &in, ScPayload *out);
    int GetNeedsUpdate(ScPayload *payload);
    int GetSupportHwConfig(ScPayload *payload);
    int GetModeList(ScPayload *payload);
    int SetPostBlendGamutConfig(const ScPayload &payload);
    int SetPostBlendGammaConfig(const ScPayload &payload);
    int SetPostBlendInvGammaConfig(const ScPayload &payload);
    int SetPostBlendPccConfig(const ScPayload &payload);
    int SetPostBlendPAConfig(const ScPayload &payload);
    int SetColorTransform(const ScPayload &payload);
    void MultiplyPccMatrix(struct pcc_coeff_data *color_comp,
                        struct pcc_coeff_data *new_color_comp);
    int forceScreenRefresh();
    status_t notifyCallback(uint32_t command,
                                   const Parcel *input_parcel,
                                   Parcel *output_parcel);
    bool checkLutStatus(int modeId);
    void HandleIGCDither(GammaPostBlendConfig *cfg);
    void sreProcess();
    void EyeCareProcess(struct rgb_entry * in);
    void AssignEyeCare();
    void AssignLut();
    void PicHDRProcess(struct rgb_entry* in);
    void AssignPicHDR();
    void AssignPicLut();
    int checkModeChange(struct ModeRenderInputParams* params);
    void dump(std::string& result);
    ColorMode mColorMode;
    sp<IQService> qservice_;
    MiStcService *mistcservice_ = nullptr;

    std::map<ScProperty, SetPropFunc> set_prop_funcs_;
    std::map<ScProperty, GetPropFunc> get_prop_funcs_;
    std::map<ScOps, ProcessOpsFunc> process_op_funcs_;
    std::mutex lock_;
    bool init_done_ = false;
    ColorModeList modes_list_ = {};
    bool needs_update_ = true;
    std::vector<std::string> hw_assets;
    static MiStcImpl *mi_impl_[kMaxNumImpl];
    std::array<int, UPDATE_LIST_MAX> update_list = {1, 1, 1, 1, 1, 1, 1};
    std::array<int, UPDATE_LIST_MAX> enable_list_mi = {0};
    std::array<int, UPDATE_LIST_MAX> enable_list_qcom = {0};
    MiImplType mDispId = kMiImplPrimary;
    int mStcEnable = 1;
    int GoogleEffect = 0;
    Mutex mEyeCareLock;
    bool mEyeCareLutUpdate = false;
    bool mPicHDRLutUpdate = false;
    // PCC
    bool need_restore_pcc = false;
    pcc_coeff_data restore_pcc = {0};
    pcc_coeff_data current_pcc = {0};
    struct pcc_coeff_data mi_pcc = {0};
    struct pcc_coeff_data native_pcc = {0};
    struct pcc_coeff_data mi_eyecare_pcc = {0};
    std::array<float, kMatrixSize> native_coeff_array;

    // IGC
    PostBlendInverseGammaHwConfig IgcConfig = {0};
    std::vector<int32_t> tempData;
    Gamma_type igcData;
    Gamma_type igcDataBackup;
    Gamma_type igcDataBuf;
    Gamma_type nativeIgcData;
    Gamma_type lastNativeIgcData;
    Gamma_type srcIgcData;
    Gamma_type targetIgcData;
    Gamma_type defaultIgcData;
    int mIgcFileCnt = 0;
    int igcDitherStrength = 0;
    Mutex mIGCDimmingLock;
    int mIgcEnable = 0;

    // GC
    PostBlendGammaHwConfig GcConfig = {0};
    Gamma_type gcData;
    Gamma_type gcDataBackup;
    Gamma_type nativeGcData;
    Gamma_type lastnativeGcData;
    Gamma_type srcGcData;
    Gamma_type targetGcData;
    Gamma_type gcDataBuf;
    Gamma_type defaultGcData;
    Gamma_type GC2_3;
    int mGcFileCnt = 0;
    Mutex mGCDimmingLock;
    int mGcEnable = 0;

    // LUT
    std::vector<rgb_entry> LutInfo;
    std::vector<rgb_entry> mLutInfoBackup;
    std::vector<rgb_entry> mNativeLutInfo;
    std::vector<rgb_entry> mLastNativeLutInfo;
    std::vector<rgb_entry> mSrcLutInfo;
    std::vector<rgb_entry> mTargetLutInfo;
    std::vector<rgb_entry> mCurLutInfo;
    std::vector<rgb_entry> mDefaultLutInfo;
    std::vector<rgb_entry> mSRELutInfo;
    std::vector<rgb_entry> mEyeCareLut;
    std::vector<rgb_entry> mEyeCareTargetLut;
    std::vector<rgb_entry> mEyeCareLutBackup;
    std::vector<rgb_entry> mPicHDRLut;
    std::vector<rgb_entry> mPicHDRTargetLut;
    std::vector<rgb_entry> mPicHDRLutBackup;
    int mLutIndex = -1;
    int mLutDimmingIndex = -1;
    int LutFileNum = 0;
    bool mLutInitialized = false;
    bool mMiCalibSupported = false;
    bool mMiNatureMode = false;
    bool mMiExpertCalib = false;
    const std::string mLutFileName[MiLutFileMax] = {"LUT_sRGB_D65_", "LUT_P3_D65_",
                                               "LUT_sRGB_D75_", "LUT_P3_D75_"};
    int mLutModeList[LUT_MODE_NUM] = {256, 281, 282, 283, 284, 285, 286, 287, 288};
    std::vector<int> ffData;
    int mCheckNum = 49;
    std::vector<FACTORY_DATA> mFFData;
    Mutex mLutDimmingLock;
    int mLutEnable = 0;

    // PA
    struct disp_pa_config_data mPaData = {0};
    struct disp_pa_config_data mNativePaData = {0};
    struct disp_pa_config_data mLastNativePaData = {0};
    struct disp_pa_config_data mSrcPaData = {0};
    struct disp_pa_config_data mTargetPaData = {0};
    struct disp_pa_config_data mDefaultPaData = {0};
    struct disp_six_zone_config mSrc6Zone = {0};
    struct disp_six_zone_config mTarget6Zone = {0};
    struct disp_six_zone_config mCur6Zone = {0};
    struct disp_six_zone_config m6ZoneBackup = {0};
    struct disp_six_zone_config mDefault6Zone = {0};
    int mSatShift = 0;
    int mContrastShift = 0;
    Mutex mPaDimmingLock;
    Mutex m6ZoneDimmingLock;
    int mPaEnable = 0;

    // EyeCare
#ifdef EYECARE_V4
    sp<EyeCare> mEyeCare[kMaxNumImpl] = {nullptr};
#endif
    int mEyeCareEnable = 0;
    int mEyeCareLevel = 0;
    int mEyeCarePaperId = 0;
    //PicHDR
    sp<PicHDRAlgo> mPicHDRAlgo[kMaxNumImpl] = {nullptr};
    int mPicHDREnable = 0;

    // Common
    STC_DisplayState mDispState = kStateOn;
    bool mMiAIDisp = false;
    int mAIDimStep = 12;
    int mTimerGeneration[TIMER_STATE_MAX] = {0};
    int mDimStep[UPDATE_LIST_MAX] = {20, 20, 20, 20, 20, 20, 20};
    int mDimEnable[UPDATE_LIST_MAX] = {0, 1, 1, 1, 1, 0, 1};
    int mDimTimeMs = 17;
    int mCurDimIndex[UPDATE_LIST_MAX] = {21, 21, 21, 21, 21, 21, 21};
    int mTargetChanged[UPDATE_LIST_MAX] = {0};
    int mModeChanged = 0;
    int mWaitRefresh = 0;
    int mRefreshRetryCnt = 3;
    int mSreEnable = 0;
    int mSreUpdate = 0;
    int mSreClosing = 0;
    bool mSreGCCorrectDone = false;
    int mSreLut[256] = {0};
    sp<MiParseXml> mParseXml[kMaxNumImpl];
    int mSreInitilized = 0;
    int mSreGcIndex = -1;
    int mSreGcIndexOriginalMode = -1;
    int SreLutLevel[SRE_LUT_NUM][SRE_LUT_LEN] = {
// 0
{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120,
121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 1
{0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47,
48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93,
94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 103, 104, 105, 106, 106, 107, 108, 109, 109, 110, 111, 112, 112, 113, 114, 115, 115, 116, 117, 118, 118, 119, 120, 121, 121, 122, 123,
124, 125, 126, 127, 128, 128, 129, 130, 131, 131, 132, 133, 134, 134, 135, 136, 137, 137, 138, 139, 140, 140, 141, 142, 143, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 2
{0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49,
 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97,
 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 127, 128, 129, 130,
 131, 132, 133, 134, 135, 135, 136, 137, 138, 139, 140, 141, 142, 143, 143, 144, 145, 146, 147, 148, 149, 150, 151, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 163, 164, 165, 166,
 167, 168, 169, 170, 171, 171, 172, 173, 174, 175, 176, 177, 178, 179, 179, 180, 181, 182, 183, 184, 185, 186, 187, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 199, 200, 201, 202,
 203, 204, 205, 206, 207, 207, 208, 209, 210, 211, 212, 213, 214, 215, 215, 216, 217, 218, 219, 220, 221, 222, 223, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 235, 236, 237, 238,
 239, 240, 241, 242, 243, 243, 244, 245, 246, 247, 248, 249, 250, 251, 251, 252, 253, 254, 255},
// 3
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57,
 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116, 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139,
 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147, 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163,
 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 4
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 5
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71,
 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116,
 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147,
 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 6
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 7
{0, 1, 2, 3, 6, 9, 12, 15, 19, 23, 26, 30, 33, 37, 41, 45, 49, 53, 57, 61, 64, 68, 71, 74, 77, 79, 82, 84, 86, 89, 91, 93, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115,
 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 126, 127, 128, 129, 129, 130, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142, 142,
 143, 143, 144, 144, 145, 145, 146, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 159, 160, 160,
 161, 161, 162, 162, 163, 163, 163, 164, 164, 165, 165, 166, 166, 167, 167, 168, 168, 168, 169, 169, 170, 170, 171, 171, 172, 172, 172, 173, 173, 174, 174, 175, 175, 176, 176, 177, 177, 177, 178, 178,
 179, 179, 180, 180, 181, 181, 181, 182, 182, 183, 183, 184, 184, 185, 185, 186, 186, 187, 187, 188, 189, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
 248, 249, 250, 251, 252, 253, 254, 255},
// 8
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 9
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71,
 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116,
 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147,
 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 10
{0, 1, 2, 6, 12, 17, 21, 26, 31, 36, 40, 45, 50, 53, 56, 59, 62, 65, 68, 70, 73, 76, 79, 81, 84, 87, 90, 92, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 110, 111, 112, 113, 113, 114, 115,
 116, 116, 117, 117, 118, 118, 119, 119, 120, 120, 121, 121, 122, 122, 123, 123, 124, 124, 125, 125, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135,
 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142, 142, 143, 143, 144, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155,
 156, 156, 157, 157, 158, 158, 159, 159, 160, 160, 161, 161, 162, 162, 163, 163, 164, 164, 165, 165, 166, 166, 167, 168, 168, 169, 170, 171, 171, 172, 173, 174, 174, 175, 176, 177, 177, 178, 179, 180,
 180, 181, 182, 183, 183, 184, 185, 186, 186, 187, 188, 189, 189, 190, 191, 192, 192, 193, 194, 195, 195, 196, 197, 198, 198, 199, 200, 201, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 249, 250, 250,
 251, 251, 252, 252, 253, 253, 254, 254, 255},
// 11
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 12
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71,
 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116,
 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147,
 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 13
{0, 1, 2, 3, 6, 9, 12, 15, 19, 23, 26, 30, 33, 37, 41, 45, 49, 53, 57, 61, 64, 68, 71, 74, 77, 79, 82, 84, 86, 89, 91, 93, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115,
 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 126, 127, 128, 129, 129, 130, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142, 142,
 143, 143, 144, 144, 145, 145, 146, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 159, 160, 160,
 161, 161, 162, 162, 163, 163, 163, 164, 164, 165, 165, 166, 166, 167, 167, 168, 168, 168, 169, 169, 170, 170, 171, 171, 172, 172, 172, 173, 173, 174, 174, 175, 175, 176, 176, 177, 177, 177, 178, 178,
 179, 179, 180, 180, 181, 181, 181, 182, 182, 183, 183, 184, 184, 185, 185, 186, 186, 187, 187, 188, 189, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
 248, 249, 250, 251, 252, 253, 254, 255},
// 14
{0, 1, 2, 5, 8, 12, 15, 18, 22, 25, 29, 33, 37, 42, 46, 51, 56, 60, 64, 68, 72, 75, 79, 82, 85, 89, 92, 95, 98, 101, 104, 107, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138, 138, 139, 139, 140, 140, 141, 141, 141, 142, 142, 143, 143, 143, 144, 144, 145,
 145, 145, 146, 146, 147, 147, 147, 148, 148, 149, 149, 149, 150, 150, 151, 151, 151, 152, 152, 153, 153, 153, 154, 154, 155, 155, 155, 156, 156, 157, 157, 157, 158, 158, 159, 159, 159, 160, 160, 161,
 161, 161, 162, 162, 163, 163, 163, 164, 164, 165, 165, 165, 166, 166, 167, 167, 167, 168, 168, 169, 169, 169, 170, 170, 171, 171, 171, 172, 172, 173, 173, 173, 174, 174, 175, 175, 175, 176, 176, 177,
 177, 177, 178, 178, 179, 179, 179, 180, 180, 181, 181, 181, 182, 182, 183, 184, 184, 185, 186, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 15
{0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59,
 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 103, 104, 105, 106, 106, 107, 108, 109,
 109, 110, 111, 112, 112, 113, 114, 115, 115, 116, 117, 118, 118, 119, 120, 121, 121, 122, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 131, 132, 133, 134, 134, 135, 136, 137, 137, 138, 139, 140,
 140, 141, 142, 143, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 16
{0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62,
 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 107, 108, 109, 110, 111, 112, 113,
 114, 115, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 127, 128, 129, 130, 131, 132, 133, 134, 135, 135, 136, 137, 138, 139, 140, 141, 142, 143, 143, 144, 145, 146, 147, 148, 149,
 150, 151, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 163, 164, 165, 166, 167, 168, 169, 170, 171, 171, 172, 173, 174, 175, 176, 177, 178, 179, 179, 180, 181, 182, 183, 184, 185,
 186, 187, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 199, 200, 201, 202, 203, 204, 205, 206, 207, 207, 208, 209, 210, 211, 212, 213, 214, 215, 215, 216, 217, 218, 219, 220, 221,
 222, 223, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 235, 236, 237, 238, 239, 240, 241, 242, 243, 243, 244, 245, 246, 247, 248, 249, 250, 251, 251, 252, 253, 254, 255},
// 17
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71,
 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116,
 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147,
 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 18
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 19
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71,
 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116,
 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147,
 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 20
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 21
{0, 1, 2, 3, 6, 9, 12, 15, 19, 23, 26, 30, 33, 37, 41, 45, 49, 53, 57, 61, 64, 68, 71, 74, 77, 79, 82, 84, 86, 89, 91, 93, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115,
 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 126, 127, 128, 129, 129, 130, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142, 142,
 143, 143, 144, 144, 145, 145, 146, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 159, 160, 160,
 161, 161, 162, 162, 163, 163, 163, 164, 164, 165, 165, 166, 166, 167, 167, 168, 168, 168, 169, 169, 170, 170, 171, 171, 172, 172, 172, 173, 173, 174, 174, 175, 175, 176, 176, 177, 177, 177, 178, 178,
 179, 179, 180, 180, 181, 181, 181, 182, 182, 183, 183, 184, 184, 185, 185, 186, 186, 187, 187, 188, 189, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
 248, 249, 250, 251, 252, 253, 254, 255},
// 22
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 23
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71,
 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116,
 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147,
 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 24
{0, 1, 2, 6, 12, 17, 21, 26, 31, 36, 40, 45, 50, 53, 56, 59, 62, 65, 68, 70, 73, 76, 79, 81, 84, 87, 90, 92, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 110, 111, 112, 113, 113, 114, 115,
 116, 116, 117, 117, 118, 118, 119, 119, 120, 120, 121, 121, 122, 122, 123, 123, 124, 124, 125, 125, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135,
 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142, 142, 143, 143, 144, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155,
 156, 156, 157, 157, 158, 158, 159, 159, 160, 160, 161, 161, 162, 162, 163, 163, 164, 164, 165, 165, 166, 166, 167, 168, 168, 169, 170, 171, 171, 172, 173, 174, 174, 175, 176, 177, 177, 178, 179, 180,
 180, 181, 182, 183, 183, 184, 185, 186, 186, 187, 188, 189, 189, 190, 191, 192, 192, 193, 194, 195, 195, 196, 197, 198, 198, 199, 200, 201, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 249, 250, 250,
 251, 251, 252, 252, 253, 253, 254, 254, 255},
// 25
{0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 21, 25, 28, 32, 35, 38, 41, 45, 48, 51, 54, 57, 60, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
 102, 103, 104, 105, 106, 106, 107, 108, 109, 110, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114, 114, 114, 115, 115, 115, 116, 116, 117, 117, 118, 118, 118, 119, 119, 120, 120, 121, 121, 121, 122,
 122, 123, 123, 124, 124, 125, 125, 126, 126, 126, 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 150, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
 251, 252, 253, 254, 255},
// 26
{0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 57, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71,
 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 115, 116,
 117, 118, 119, 120, 121, 122, 123, 123, 124, 125, 126, 127, 128, 128, 129, 130, 131, 132, 132, 133, 134, 135, 136, 136, 137, 138, 139, 139, 140, 141, 141, 142, 143, 143, 144, 145, 146, 146, 147, 147,
 148, 149, 149, 150, 151, 151, 152, 152, 153, 154, 154, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 160, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255},
// 27
{0, 1, 2, 3, 6, 9, 12, 15, 19, 23, 26, 30, 33, 37, 41, 45, 49, 53, 57, 61, 64, 68, 71, 74, 77, 79, 82, 84, 86, 89, 91, 93, 95, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115,
 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 126, 127, 128, 129, 129, 130, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138, 139, 139, 140, 140, 141, 141, 142, 142,
 143, 143, 144, 144, 145, 145, 146, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 150, 151, 151, 152, 152, 153, 153, 154, 154, 155, 155, 155, 156, 156, 157, 157, 158, 158, 159, 159, 159, 160, 160,
 161, 161, 162, 162, 163, 163, 163, 164, 164, 165, 165, 166, 166, 167, 167, 168, 168, 168, 169, 169, 170, 170, 171, 171, 172, 172, 172, 173, 173, 174, 174, 175, 175, 176, 176, 177, 177, 177, 178, 178,
 179, 179, 180, 180, 181, 181, 181, 182, 182, 183, 183, 184, 184, 185, 185, 186, 186, 187, 187, 188, 189, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
 248, 249, 250, 251, 252, 253, 254, 255},
// 28
{0, 1, 2, 5, 8, 12, 15, 18, 22, 25, 29, 33, 37, 42, 46, 51, 56, 60, 64, 68, 72, 75, 79, 82, 85, 89, 92, 95, 98, 101, 104, 107, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126,
 127, 127, 128, 128, 129, 129, 130, 130, 131, 131, 132, 132, 133, 133, 134, 134, 135, 135, 136, 136, 137, 137, 138, 138, 138, 139, 139, 140, 140, 141, 141, 141, 142, 142, 143, 143, 143, 144, 144, 145,
 145, 145, 146, 146, 147, 147, 147, 148, 148, 149, 149, 149, 150, 150, 151, 151, 151, 152, 152, 153, 153, 153, 154, 154, 155, 155, 155, 156, 156, 157, 157, 157, 158, 158, 159, 159, 159, 160, 160, 161,
 161, 161, 162, 162, 163, 163, 163, 164, 164, 165, 165, 165, 166, 166, 167, 167, 167, 168, 168, 169, 169, 169, 170, 170, 171, 171, 171, 172, 172, 173, 173, 173, 174, 174, 175, 175, 175, 176, 176, 177,
 177, 177, 178, 178, 179, 179, 179, 180, 180, 181, 181, 181, 182, 182, 183, 184, 184, 185, 186, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
 247, 248, 249, 250, 251, 252, 253, 254, 255},
};
};
}
#endif // __MI_STC_IMP_HW_MODULATE_H__
